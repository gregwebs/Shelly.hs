name: CI for windows and macOS
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:

  cabal:
    name: Haskell-CI - ${{ matrix.os }} - GHC ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest]
        ghc:
          - '9.2'
          - '9.4'
          - '9.6'
          - '9.8'
      fail-fast: false

    # 2021-11-14
    # try something like "allow-failure" for windows with GHC-9.2
    # see https://github.com/gregwebs/Shelly.hs/pull/205#issuecomment-967956528
    # UPDATE: since unix-compat is fixed on hackage, CI succeeds again
    # So we do not need this:
    # continue-on-error: ${{ startsWith(matrix.os, 'windows') && startsWith(matrix.ghc, '9.2') }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      id: setup
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-update: true

    - name: Build
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal build all --dry-run

    - name: Restore cache
      uses: actions/cache/restore@v4
      id: cache
      env:
        key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ env.key }}-${{ hashFiles('dist-newstyle/cache/plan.json') }}
        restore-keys: ${{ env.key }}

    - name: Build
      run: |
        cabal build all

    - name: Test
      run: |
        cabal test all

    - name: Cache dependencies
      uses: actions/cache/save@v4
      if: always() && steps.cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key:  ${{ steps.cache.outputs.cache-primary-key }}
