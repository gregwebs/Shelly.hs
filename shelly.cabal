Name:       shelly

Version:     1.0.0.0
Synopsis:    shell-like (systems) programming in Haskell

Description: Shelly provides convenient systems programming in Haskell,
             similar in spirit to POSIX shells. Shelly:
             .
               * is aimed at convenience and getting things done rather than
                 being a demonstration of elegance.
             .
               * has detailed and useful error messages
             .
               * maintains its own environment, making it thread-safe.
             .
               * is modern, using Text and system-filepath/system-fileio
             .
             Shelly is originally forked from the Shellish package.
             .
             See the shelly-extra package for additional functionality.
             .
             An overview is available in the README: <https://github.com/yesodweb/Shelly.hs/blob/master/README.md>


Homepage:            https://github.com/yesodweb/Shelly.hs
License:             BSD3
License-file:        LICENSE
Author:              Greg Weber, Petr Rockai
Maintainer:          Greg Weber <greg@gregweber.info>
Category:            Development
Build-type:          Simple
Cabal-version:       >=1.8


Library
  Exposed-modules: Shelly, Shelly.Pipe
  other-modules:   Shelly.Base, Shelly.Find
  hs-source-dirs: src

  Build-depends:
    containers                >= 0.5.0.0,
    time                      >= 1.3 && < 1.5,
    directory                 >= 1.1.0.0 && < 1.3.0.0,
    text,
    mtl                       >= 2,
    process                   >= 1.1.0,
    unix-compat               < 0.5,
    system-filepath           >= 0.4.7 && < 0.5,
    system-fileio             < 0.4,
    bytestring

  if impl(ghc >= 7.6.1)
    build-depends:
        base >= 4.6 && < 5
  else
    build-depends:
      base >= 4 && < 5

  ghc-options: -Wall -threaded

  if impl(ghc >= 7.6.1)
      CPP-Options: -DNO_PRELUDE_CATCH

  extensions:
    CPP


source-repository head
  type:     git
  location: https://github.com/yesodweb/Shelly.hs
